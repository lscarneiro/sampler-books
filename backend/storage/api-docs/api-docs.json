{
    "openapi": "3.0.0",
    "info": {
        "title": "Sampler Book Library API",
        "description": "This is the documentation of the Sampler Book Library API, with this API you can check-in and out books after you register as an user",
        "version": "0.0.1"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register as new user.",
                "description": "Register as new user",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::register",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Register as new user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Register as new user.",
                                        "type": "string"
                                    },
                                    "date_of_birth": {
                                        "description": "Register as new user.",
                                        "type": "date"
                                    },
                                    "password": {
                                        "description": "Register as new user.",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "George Lucas",
                                    "email": "george@lucasarts.com",
                                    "date_of_birth": "1944-05-14",
                                    "password": "5T4r W4Rs"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An acess_token response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "Token type",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration in seconds",
                                            "type": "integer",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGc...",
                                        "token_type": "bearer",
                                        "expires_in": 3600
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Register as new user.",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "Register as new user.",
                                            "properties": {
                                                "email": {
                                                    "description": "Register as new user.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "date_of_birth": {
                                                    "description": "Register as new user.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The date of birth is not a valid date."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get a JWT via given credentials.",
                "description": "Endpoint for log in",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Get a JWT via given credentials.",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Get a JWT via given credentials.",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "foo@foobar.com",
                                    "password": "P455w0Rd"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An acess_token response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "Token type",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration in seconds",
                                            "type": "integer",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGc...",
                                        "token_type": "bearer",
                                        "expires_in": 3600
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Get a JWT via given credentials.",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "Get a JWT via given credentials.",
                                            "properties": {
                                                "email": {
                                                    "description": "Get a JWT via given credentials.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "description": "Get a JWT via given credentials.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log the user out (Invalidate the token).",
                "description": "Endpoint for log out. It invalidates the JWT",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "JWT access token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Successfully logged out"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated User.",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::me",
                "responses": {
                    "200": {
                        "description": "The user saved data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        },
        "/api/books/search": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Search books",
                "description": "Search by Title OR ISBN. If both are passed, ISBN will be used.",
                "operationId": "App\\Http\\Controllers\\BooksController::search",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Search books",
                                        "type": "string",
                                        "example": "Harry Potter"
                                    },
                                    "isbn": {
                                        "description": "Search books",
                                        "type": "string",
                                        "example": "1408855895"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mathing books.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Book"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Search books",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "Search books",
                                            "properties": {
                                                "isbn": {
                                                    "description": "Search books",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Must be a valid ISBN-10."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        },
        "/api/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get books from user",
                "description": "Retrieve the list of books atributed to the user.",
                "operationId": "App\\Http\\Controllers\\BooksController::userBooks",
                "responses": {
                    "200": {
                        "description": "User books.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Book"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create book",
                "description": "Adds a new book to the library.",
                "operationId": "App\\Http\\Controllers\\BooksController::create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Create book",
                                        "type": "integer",
                                        "readOnly": "true",
                                        "example": "1"
                                    },
                                    "title": {
                                        "description": "Create book",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Harry Potter and the Philosopher's Stone"
                                    },
                                    "isbn": {
                                        "description": "Create book",
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "1408855895"
                                    },
                                    "published_at": {
                                        "description": "Create book",
                                        "type": "date",
                                        "example": "2014-01-22"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The book data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Create book",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "Create book",
                                            "properties": {
                                                "isbn": {
                                                    "description": "Create book",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Must be a valid ISBN-10."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        },
        "/api/books/{bookId}/checkout": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Checkout book",
                "description": "Checks out a book.",
                "operationId": "App\\Http\\Controllers\\BooksController::checkout",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "description": "ID of book",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book successfully checked out.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Checkout book",
                                            "type": "string",
                                            "example": "Book checkout successful, enjoy your reading!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Checkout book",
                                            "type": "string",
                                            "example": "Action could be completed."
                                        },
                                        "errors": {
                                            "description": "Checkout book",
                                            "properties": {
                                                "checked_out": {
                                                    "description": "Checkout book",
                                                    "type": "string",
                                                    "example": "Book is not available to checkout."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        },
        "/api/books/{bookId}/checkin": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Checkin book",
                "description": "Checks in a book.",
                "operationId": "App\\Http\\Controllers\\BooksController::checkin",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "description": "ID of book",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book successfully checked in.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Checkin book",
                                            "type": "string",
                                            "example": "Book checkin successful, combe back later!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Checkin book",
                                            "type": "string",
                                            "example": "Action could be completed."
                                        },
                                        "errors": {
                                            "description": "Checkin book",
                                            "properties": {
                                                "already_available": {
                                                    "description": "Checkin book",
                                                    "type": "string",
                                                    "example": "Book is already available."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Harry Potter and the Philosopher's Stone"
                    },
                    "isbn": {
                        "type": "string",
                        "maxLength": 10,
                        "example": "1408855895"
                    },
                    "published_at": {
                        "type": "date",
                        "example": "2014-01-22"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CHECKED_OUT",
                            "AVAILABLE"
                        ],
                        "example": "AVAILABLE"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Book"
                }
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "john@foobar.com"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John"
                    },
                    "date_of_birth": {
                        "type": "date",
                        "example": "1991-01-22"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "access_token": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}